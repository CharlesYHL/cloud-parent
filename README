1.cloud-parent 采用spring-cloud 和springboot 微服务框架搭建
2.eureka-server 和 eureka-hi 服务的注册与发现（Eureka）
3.eureka-ribbon 服务消费者（rest+ribbon）
4.eureka-feign 服务消费者（feign）
5.eureka-ribbon 增加断路器（Hystrix）
6.eureka-feign 增加断路器（Hystrix）
7.在微服务架构中，根据业务来拆分成一个个的服务，服务与服务之间可以相互调用（RPC），在Spring Cloud可以用RestTemplate+Ribbon和Feign来调用。为了保证其高可用，单个服务通常会集群部署。由于网络原因或者自身的原因，服务并不能保证100%可用，如果单个服务出现问题，调用这个服务就会出现线程阻塞，此时若有大量的请求涌入，Servlet容器的线程资源会被消耗完毕，导致服务瘫痪。服务与服务之间的依赖性，故障会传播，会对整个微服务系统造成灾难性的严重后果，这就是服务故障的“雪崩”效应。
8.eureka-zuul 路由网关(zuul) 根据不同的请求地址指定不同的服务
9.eureka-config-server和eureka-config-client 使用分布式配置中心(Spring Cloud Config)
10.server-parents 包括四个模块  server-zipkin 使用ZipkinServer 的功能，收集调用数据，并展示。server-hi、server-miya和server-third 对外暴露接口 ,该模块使用Spring Cloud Sleuth集成了zipkin组件 执行服务链路追踪